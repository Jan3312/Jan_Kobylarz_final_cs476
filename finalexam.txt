ready

Q1)
	According to JLS 4.10.2 Subtyping among Class and Interface Types Given a non-generic type declaration C, the direct supertypes of the type C are all
	of the following:
		
   • The direct superclass of C (§8.1.4).
	 • The direct superinterfaces of C (§8.1.5).
	 • The type Object, if C is an interface type with no direct superinterfaces (§9.1.3)

 	In this instance the program does not have a type error, but a scope error.
	You should comment out statement 2 without producing any errors. Without any compiler errors, it outpus nothing, but if you remove the static scope from
	T_1000, make the class static, and uncomment statement 2 is shoud output:
	"Come with me if you want to have fun." You would want to comment statement 2 because the class T_1000 is in a static scope. The class itself
	will not be initialized because any variables or changes made in that scope cannot be used outside of it.
  
Q2)
	Each element of a tuple in Scala can have it's own individual type, therefore a list or tuple could not allow for the direct access of an element.
	If you want to access the nth element of a list/tuple you need to specify it's type like for example myTuple[Int, Double, Float]. 


Q3)	
	val Map = Map(1 -> 10, 2 -> 20, 2 -> 30)
	val n: Int = 5
	def ApplyFunctionNtimes(map: Map[Int, Int], Int: n) = {

		
		while(n > 0){

		   yield Map(Int, Int)
		   n-1
		}	
	}
	
